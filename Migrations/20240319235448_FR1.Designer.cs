// <auto-generated />
using System;
using FiyiRequirements.Areas.BasicCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiyiRequirements.Migrations
{
    [DbContext(typeof(FiyiRequirementsContext))]
    [Migration("20240319235448_FR1")]
    partial class FR1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FiyiRequirements.Areas.BasicCore.Entities.Failure", b =>
                {
                    b.Property<int>("FailureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FailureId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmergencyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("FailureId");

                    b.ToTable("Failure");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.BasicCore.Entities.Parameter", b =>
                {
                    b.Property<int>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParameterId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsPrivate")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("ParameterId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.CMSCore.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<string>("IconURLPath")
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("MenuFatherId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("URLPath")
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9597),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9598),
                            IconURLPath = "",
                            MenuFatherId = 0,
                            Name = "BasicCore",
                            Order = 100,
                            URLPath = "",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 2,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9615),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9616),
                            IconURLPath = "",
                            MenuFatherId = 1,
                            Name = "Failure",
                            Order = 0,
                            URLPath = "/BasicCore/FailurePage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 3,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9632),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9632),
                            IconURLPath = "",
                            MenuFatherId = 1,
                            Name = "Parameter",
                            Order = 0,
                            URLPath = "/BasicCore/ParameterPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 4,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9647),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9647),
                            IconURLPath = "",
                            MenuFatherId = 0,
                            Name = "BasicCulture",
                            Order = 200,
                            URLPath = "",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 5,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9662),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9662),
                            IconURLPath = "",
                            MenuFatherId = 4,
                            Name = "City",
                            Order = 0,
                            URLPath = "/BasicCulture/CityPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 6,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9678),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9679),
                            IconURLPath = "",
                            MenuFatherId = 4,
                            Name = "State",
                            Order = 0,
                            URLPath = "/BasicCulture/StatePage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 7,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9692),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9693),
                            IconURLPath = "",
                            MenuFatherId = 4,
                            Name = "Country",
                            Order = 0,
                            URLPath = "/BasicCulture/CountryPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 8,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9707),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9708),
                            IconURLPath = "",
                            MenuFatherId = 4,
                            Name = "Planet",
                            Order = 0,
                            URLPath = "/BasicCulture/PlanetPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 9,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9722),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9722),
                            IconURLPath = "",
                            MenuFatherId = 4,
                            Name = "Sex",
                            Order = 0,
                            URLPath = "/BasicCulture/SexPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 10,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9738),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9738),
                            IconURLPath = "",
                            MenuFatherId = 0,
                            Name = "CMSCore",
                            Order = 300,
                            URLPath = "",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 11,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9752),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9753),
                            IconURLPath = "",
                            MenuFatherId = 10,
                            Name = "User",
                            Order = 0,
                            URLPath = "/CMSCore/UserPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 12,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9767),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9768),
                            IconURLPath = "",
                            MenuFatherId = 10,
                            Name = "Role",
                            Order = 0,
                            URLPath = "/CMSCore/RolePage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 13,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9781),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9782),
                            IconURLPath = "",
                            MenuFatherId = 10,
                            Name = "Menu",
                            Order = 0,
                            URLPath = "/CMSCore/MenuPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 14,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9796),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9797),
                            IconURLPath = "",
                            MenuFatherId = 10,
                            Name = "Permission",
                            Order = 0,
                            URLPath = "/CMSCore/Permission",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 15,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9812),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9812),
                            IconURLPath = "",
                            MenuFatherId = 0,
                            Name = "FiyiRequirements",
                            Order = 0,
                            URLPath = "",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 16,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9826),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9826),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "BlogPost",
                            Order = 0,
                            URLPath = "/FiyiRequirements/BlogPostPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 17,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9840),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9840),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "Perfil",
                            Order = 0,
                            URLPath = "/FiyiRequirements/UserProfilePage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 18,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9855),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9856),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "Agenda",
                            Order = 0,
                            URLPath = "/FiyiRequirements/AgendaPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 19,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9870),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9870),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "CarouselTemasDeInteres",
                            Order = 0,
                            URLPath = "/FiyiRequirements/CarouselTemasDeInteresPage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 20,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9884),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9885),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "MarketplaceServices",
                            Order = 0,
                            URLPath = "/FiyiRequirements/MarketplacePostServicePage",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            MenuId = 21,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9899),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9900),
                            IconURLPath = "",
                            MenuFatherId = 15,
                            Name = "Estadisticas",
                            Order = 0,
                            URLPath = "/Estadisticas",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        });
                });

            modelBuilder.Entity("FiyiRequirements.Areas.CMSCore.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9520),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9521),
                            Name = "Root",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9565),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9566),
                            Name = "Administrator",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            RoleId = 3,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9580),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9580),
                            Name = "Client",
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        });
                });

            modelBuilder.Entity("FiyiRequirements.Areas.CMSCore.Entities.RoleMenu", b =>
                {
                    b.Property<int>("RoleMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleMenuId"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RoleMenuId");

                    b.ToTable("RoleMenu");

                    b.HasData(
                        new
                        {
                            RoleMenuId = 1,
                            MenuId = 10,
                            RoleId = 1
                        },
                        new
                        {
                            RoleMenuId = 2,
                            MenuId = 14,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("FiyiRequirements.Areas.CMSCore.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(380)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9394),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9405),
                            Email = "novillo.matias1@gmail.com",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 1,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9436),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9437),
                            Email = "kalebem83@gmail.com",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 2,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            UserId = 3,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9454),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9454),
                            Email = "carlos.e.gariglio@gmail.com",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 2,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            UserId = 4,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9471),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9471),
                            Email = "martinlermer@hotmail.com",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 2,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            UserId = 5,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9487),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9487),
                            Email = "paolalocucion@yahoo.com.ar",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 2,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        },
                        new
                        {
                            UserId = 6,
                            Active = (byte)1,
                            DateTimeCreation = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9504),
                            DateTimeLastModification = new DateTime(2024, 3, 19, 20, 54, 47, 731, DateTimeKind.Local).AddTicks(9505),
                            Email = "sinapsiscom@gmail.com",
                            Password = "Pq5FM4q7dDtlZBGcn0w8P0XjnEPDlTCcLUY5/bWVcuVJ4/kXRyHp62hPgry0R/ur+kEspHc+HK6XqqvA8OLXLw==",
                            RoleId = 2,
                            UserCreationId = 1,
                            UserLastModificationId = 1
                        });
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.Requirement", b =>
                {
                    b.Property<int>("RequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<int>("RequirementPriorityId")
                        .HasColumnType("int");

                    b.Property<int>("RequirementStateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementId");

                    b.ToTable("Requirement");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.RequirementChangehistory", b =>
                {
                    b.Property<int>("RequirementChangehistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementChangehistoryId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<int>("RequirementId")
                        .HasColumnType("int");

                    b.Property<int>("RequirementPriorityId")
                        .HasColumnType("int");

                    b.Property<int>("RequirementStateId")
                        .HasColumnType("int");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementChangehistoryId");

                    b.ToTable("RequirementChangehistory");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.RequirementFile", b =>
                {
                    b.Property<int>("RequirementFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementFileId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<int>("RequirementId")
                        .HasColumnType("int");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementFileId");

                    b.ToTable("RequirementFile");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.RequirementNote", b =>
                {
                    b.Property<int>("RequirementNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementNoteId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<int>("RequirementId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementNoteId");

                    b.ToTable("RequirementNote");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.RequirementPriority", b =>
                {
                    b.Property<int>("RequirementPriorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementPriorityId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementPriorityId");

                    b.ToTable("RequirementPriority");
                });

            modelBuilder.Entity("FiyiRequirements.Areas.FiyiRequirements.Entities.RequirementState", b =>
                {
                    b.Property<int>("RequirementStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementStateId"));

                    b.Property<byte>("Active")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTimeLastModification")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("UserCreationId")
                        .HasColumnType("int");

                    b.Property<int>("UserLastModificationId")
                        .HasColumnType("int");

                    b.HasKey("RequirementStateId");

                    b.ToTable("RequirementState");
                });
#pragma warning restore 612, 618
        }
    }
}
