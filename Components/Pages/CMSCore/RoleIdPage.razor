
@page "/CMSCore/RolePage/{RoleId:int}"

@using FiyiRequirements.Areas.CMSCore.Repositories;
@using FiyiRequirements.Areas.CMSCore.Entities;
@using FiyiRequirements.Areas.CMSCore.DTOs;
@inject RoleRepository roleRepository;

@if (RoleId == 0)
{
    <PageTitle>Agrega rol - FiyiRequirements</PageTitle>
}
else
{
    <PageTitle>Editar rol - FiyiRequirements</PageTitle>
}

<FiyiRequirements.Components.Layout.NavBarVerticalDashboard lstMenuResult="lstMenuResult"></FiyiRequirements.Components.Layout.NavBarVerticalDashboard>

<div class="main-content position-relative max-height-vh-100 h-100">
    <FiyiRequirements.Components.Layout.NavBarHorizontalDashboard></FiyiRequirements.Components.Layout.NavBarHorizontalDashboard>
    <div class="container-fluid px-2 px-md-4">
        <div class="page-header min-height-300 border-radius-xl mt-4"
             style="background-image: url('assets/img/illustrations/Landscape2.jpg');">
            <span class="mask bg-gradient-primary opacity-6"></span>
        </div>
        <div class="card card-body mx-3 mx-md-4 mt-n6">
            <div class="card-header mb-0 pb-0 bg-white">
                <h1 class="mb-3">
                    @if(RoleId == 0)
                    {
                        <span>Agregar rol</span>
                    }
                    else
                    {
                        <span>Editar rol</span>
                    }
                </h1>
                <NavLink class="btn btn-outline-info" href="CMSCore/RolePage">
                    <span class="fas fa-chevron-left"></span>
                    &nbsp;Volver
                </NavLink>
            </div>
            <div class="card-body px-0">
                <form method="post" @onsubmit="Submit"
                      @formname="role-form" class="mb-4">
                    <AntiforgeryToken />
                    <!--Name-->
                    <div class="mb-3">
                        <label for="name"
                               class="input-group input-group-static">
                            Nombre
                        </label>
                        <input type="text"
                               id="name"
                               class="form-control"
                               
                               @bind="Role!.Name" />
                    </div>
                    
                    <hr />
                    <button id="btn-submit" type="submit"
                            class="btn bg-gradient-primary">
                        <i class="fas fa-pen"></i>
                        @if (RoleId == 0)
                        {
                            <span>Agregar</span>
                        }
                        else
                        {
                            <span>Editar</span>
                        }
                    </button>
                    <NavLink class="btn btn-outline-info" href="CMSCore/RolePage">
                        <span class="fas fa-chevron-left"></span>
                        &nbsp;Volver
                    </NavLink>
                </form>
                @if (Message != "")
                {
                    @((MarkupString)Message)
                }
            </div>
        </div>
    </div>

    <FiyiRequirements.Components.Layout.FooterDashboard></FiyiRequirements.Components.Layout.FooterDashboard>
</div>

@code {
    #region Properties
    public List<Menu> lstMenuResult { get; set; } = new();

    public List<Role> lstRole { get; set; } = new();

    [Parameter]
    public int RoleId { get; set; }

    public string Message { get; set; } = "";

    [SupplyParameterFromForm]
    public Role Role { get; set; } = new();

    public User User { get; set; } = new();


    #endregion

    protected override void OnInitialized()
    {
        try
        {
            //Look for saved user in shared component, simulates a session
            User = StateContainer.User == null ? new() : StateContainer.User;

            lstMenuResult = [];
            Role = new();

            if (User != null)
            {
                if (User.UserId != 0)
                {
                    //Logged user
                    if (User.RoleId != 1) //Only Root can access
                    {
                        NavigationManager.NavigateTo("403");
                    }

                    List<Menu> lstMenu = menuRepository
                                        .GetAll();

                    lstMenuResult = rolemenuRepository
                                        .GetAllByRoleId(User.RoleId, lstMenu);

                    lstRole = roleRepository.GetAll();

                    if (RoleId == 0)
                    {
                        //Create new Role
                        Role = new();
                    }
                    else
                    {
                        //Edit user
                        //Populate user data
                        Role = roleRepository
                                    .GetByRoleId(RoleId);
                    }
                }
                else
                {
                    //Not logged user

                    //Redirect to...
                    NavigationManager.NavigateTo("Login");
                }
            }
            else
            {
                //Impossible
            }

            base.OnInitialized();
        }
        catch (Exception ex)
        {
            Failure failure = new()
                {
                    Active = true,
                    DateTimeCreation = DateTime.Now,
                    DateTimeLastModification = DateTime.Now,
                    UserCreationId = 1,
                    UserLastModificationId = 1,
                    EmergencyLevel = 1,
                    Comment = "",
                    Message = ex.Message,
                    Source = ex.Source,
                    StackTrace = ex.StackTrace
                };

            failureRepository.Add(failure);

            Message = $@"<div class=""alert alert-danger text-white font-weight-bold"" role=""alert"">
                            Hubo un error. Intente nuevamente. Mensaje del error: {ex.Message}
                         </div>";
        }
    }

    private void Submit()
    {
        try
        {
            if (RoleId == 0)
            {
                //Create new Role
                Role.RoleId = 0;

                Role.DateTimeCreation = DateTime.Now;
                Role.DateTimeLastModification = DateTime.Now;

                roleRepository
                        .Add(Role);
            }
            else
            {

                Role.DateTimeLastModification = DateTime.Now;

                //Update data
                roleRepository
                            .Update(Role);
            }

            //Redirect to users page
            NavigationManager.NavigateTo("CMSCore/RolePage");
        }
        catch (Exception ex)
        {
            Failure failure = new()
                {
                    Active = true,
                    DateTimeCreation = DateTime.Now,
                    DateTimeLastModification = DateTime.Now,
                    UserCreationId = 1,
                    UserLastModificationId = 1,
                    EmergencyLevel = 1,
                    Comment = "",
                    Message = ex.Message,
                    Source = ex.Source,
                    StackTrace = ex.StackTrace
                };

            failureRepository.Add(failure);

            Message = $@"<div class=""alert alert-danger text-white font-weight-bold"" role=""alert"">
                            Hubo un error. Intente nuevamente. Mensaje del error: {ex.Message}
                         </div>";
        }
        finally
        {
            //Re-render the page to show ScannedText
            InvokeAsync(() => StateHasChanged()).ConfigureAwait(false);
        }
    }

    
}

