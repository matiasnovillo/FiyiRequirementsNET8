@page "/"

@using FiyiRequirements.Areas.CMSCore.Entities;
@using FiyiRequirements.Areas.CMSCore.Repositories;
@using FiyiRequirements.Components.Shared;
@inject UserRepository userRepository;
@inject StateContainer StateContainer

<PageTitle>Home - FiyiRequirements</PageTitle>

<FiyiRequirements.Components.Layout.NavBarHorizontalHome></FiyiRequirements.Components.Layout.NavBarHorizontalHome>

<header class="header-rounded-images">
    <div class="page-header min-vh-90">
        <img class="position-absolute fixed-top ms-auto w-50 h-100 z-index-0 d-none d-sm-none d-md-block border-radius-section border-top-end-radius-0 border-top-start-radius-0 border-bottom-end-radius-0" src="https://images.unsplash.com/photo-1538681105587-85640961bf8b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1000&q=80" alt="image" loading="lazy">
        <div class="container">
            <div class="row">
                <div class="col-lg-7 d-flex">
                    <div class="card card-body blur text-md-start text-center px-sm-5 shadow-lg mt-sm-5 py-sm-5">
                        <h2 class="text-dark mb-4">
                            FiyiRequirements
                        </h2>
                        <p class="lead text-dark pe-md-5 me-md-5">
                            Administra tus clientes y usuarios potenciales con esta
                            aplicación de requerimientos. Dales el acceso a tus clientes
                            para que suban sus requerimientos, necesidades, urgencias y
                            dudas.
                        </p>
                        <div class="buttons">
                            <NavLink class="btn btn-dark mt-4"
                            href="Login/Dashboard">
                                Acceder
                            </NavLink>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

@code{
    protected override void OnInitialized()
    {
        try
        {
            base.OnInitialized();
        }
        catch (Exception ex)
        {
            Failure failure = new()
                {
                    Active = true,
                    DateTimeCreation = DateTime.Now,
                    DateTimeLastModification = DateTime.Now,
                    UserCreationId = 1,
                    UserLastModificationId = 1,
                    EmergencyLevel = 1,
                    Comment = "",
                    Message = ex.Message,
                    Source = ex.Source,
                    StackTrace = ex.StackTrace
                };

            failureRepository.Add(failure);
        }

    }
}